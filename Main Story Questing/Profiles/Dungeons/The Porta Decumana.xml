<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: The Porta Decumana
  Authors: DomesticWarlord86
	Version: 2.0
	Zone Id: 1048 
	
	
	
[18:58:25.925 V] [SideStep] Geocrush [CastType][Id: 28999][Omen: 27][RawCastType: 2][ObjId: 1073895042]
		Move to Ally
[19:03:16.528 V] [SideStep] Vulcan Burst [CastType][Id: 29003][Omen: 141][RawCastType: 2][ObjId: 1073895041]		
		Move to Ally
[19:04:03.848 V] [SideStep] Radiant Blaze [CastType][Id: 28991][Omen: 7][RawCastType: 2][ObjId: 1073895054]
		Turn off Sidestep. Room wide AOE that you can only dodge by DPSing the boss.
[15:22:37.051 V] [SideStep] Weight of the Land [CastType][Id: 29001][Omen: 8][RawCastType: 2][ObjId: 1073749701]
		Sidestep handles
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>The Porta Decumana</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
	
		<If condition="not DutyManager.InInstance">
			<JoinSupportDuty DutyId="830" Trial="true"/> 
		</If>	

	<If condition="DutyManager.InInstance">
		
		<RunCode name="PluginLoad"/>
	
		<Grind GrindRef="TheUltimaWeapon" While="not Managers.QuestLogManager.InCutscene and not IsDutyEnded()"/> <!-- Kill The Ultima Weapon -->
		<WaitWhile Condition="Managers.QuestLogManager.InCutscene and not IsDutyEnded()"/>
		<Grind GrindRef="TheUltimaWeapon2" While="not IsDutyEnded()"/> <!-- Kill The Ultima Weapon -->
		
		<While condition="DutyManager.InInstance and IsDutyEnded()">	
			<WaitTimer WaitTime="5" />
			<LLLeaveDuty/>
		</While>		
		
	</If>

	<LLoadProfile Path="../../Start.xml"/>		

	
 </Order>
  <GrindAreas>
    <GrindArea name="TheUltimaWeapon">
      <Hotspots>
        <Hotspot Radius="90" XYZ="-758, -400.1316, -600" name="Name"/>
				<Hotspot Radius="90" XYZ="-689.555, -185.7316, 480.347" name="Name"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="2137" Weight="1"/> <!-- The Ultima Weapon -->
      </TargetMobs>
    </GrindArea>
    <GrindArea name="TheUltimaWeapon2">
      <Hotspots>
        <Hotspot Radius="90" XYZ="-689.555, -185.7316, 480.347" name="Name"/>
      </Hotspots>
      <TargetMobs>
        <TargetMob Id="2137" Weight="1"/> <!-- The Ultima Weapon -->
      </TargetMobs>
    </GrindArea>
  </GrindAreas>		
  <CodeChunks>
	 <CodeChunk name="PluginLoad">
      <![CDATA[
        var Plugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "DungeonAssist");
        var Plugin2 = PluginManager.Plugins.Where(p => p.Plugin.Name == "Osiris");
		var Plugin3 = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
		
	
		
		var text1 = string.Empty;
        var text2 = string.Empty;
		var text3 = string.Empty;
        var text4 = string.Empty;
		var text5 = string.Empty;
        var text6 = string.Empty;
		
		
		text1 = "Plug-In Dungeon Assist is installed and enabled";
		text2 = "You Need the Dungeon Assist Plug-In to Operate this Profile";
		text3 = "Plug-In Osiris  is installed and enabled";
		text4 = "You Need the Osiris Plug-In to Operate this Profile";
		text5 = "Plug-In SideStep  is installed and enabled";
		text6 = "You Need the SideStep Plug-In to Operate this Profile";
		
					
			if(Plugin.Any()){
				
				if (Plugin != null)
				{
					PluginManager.SetEnabledPlugins("DungeonAssist");
					Core.OverlayManager.AddToast(() => text1, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
			else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin2.Any()){
				
				if (Plugin2 != null)
				{
					PluginManager.SetEnabledPlugins("Osiris");
					Core.OverlayManager.AddToast(() => text3, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin3.Any()){
				
				if (Plugin3 != null)
				{
					PluginManager.SetEnabledPlugins("SideStep");
					Core.OverlayManager.AddToast(() => text5, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
		else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
        await Coroutine.Sleep(1000);
      ]]>	
		</CodeChunk>	
	
  </CodeChunks>  
</Profile>    