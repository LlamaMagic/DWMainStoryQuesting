<?xml version="1.0" encoding="utf-8"?>
<!--
  Profile: The Navel
  Authors: DomesticWarlord86
	Version: 2.0
-->

<!DOCTYPE Profile [
<!-- Profile Settings -->
<!ENTITY openchest "0">
]>

<Profile>
  <Name>The Navel</Name>
  <BehaviorDirectory></BehaviorDirectory>
  <Order>
	
		<If condition="not DutyManager.InInstance">
			<JoinSupportDuty DutyId="57" Trial="true"/> 
		</If>

		<If condition="DutyManager.InInstance">
			
			<RunCode name="PluginLoad"/>
			
			<MoveTo XYZ="-0.1087532, 2.384186E-07, 1.400909" usemesh="false"/> <!-- Move to center -->
			<Grind GrindRef="Titan" While="not IsDutyEnded()"/> <!-- Kill Titan -->
			<If Condition="&openchest; == 1">
				<LLOpenChest />
			</If>
		</If>

		<While condition="DutyManager.InInstance and IsDutyEnded()">	
			<WaitTimer WaitTime="5" />
			<LLLeaveDuty/>
		</While>
		
		<LLoadProfile Path="../../Start.xml"/>		

 </Order>
  <GrindAreas>
		<GrindArea name="Titan">
      <Hotspots>
				<Hotspot Radius="200" XYZ="-0.1087532, 2.384186E-07, 1.400909" />
      </Hotspots>
      <TargetMobs>
				<TargetMob Id="1801" Weight="1"/> <!-- Titan -->
        <TargetMob Id="1804" Weight="10"/> <!-- Granite Gaol -->
        <TargetMob Id="1802" Weight="2"/> <!-- Titan's Heart -->
      </TargetMobs>
		</GrindArea>
  </GrindAreas>		
  <CodeChunks>
	 <CodeChunk name="PluginLoad">
      <![CDATA[
        var Plugin = PluginManager.Plugins.Where(p => p.Plugin.Name == "DungeonAssist");
        var Plugin2 = PluginManager.Plugins.Where(p => p.Plugin.Name == "Osiris");
		var Plugin3 = PluginManager.Plugins.Where(p => p.Plugin.Name == "SideStep");
		
	
		
		var text1 = string.Empty;
        var text2 = string.Empty;
		var text3 = string.Empty;
        var text4 = string.Empty;
		var text5 = string.Empty;
        var text6 = string.Empty;
		
		
		text1 = "Plug-In Dungeon Assist is installed and enabled";
		text2 = "You Need the Dungeon Assist Plug-In to Operate this Profile";
		text3 = "Plug-In Osiris  is installed and enabled";
		text4 = "You Need the Osiris Plug-In to Operate this Profile";
		text5 = "Plug-In SideStep  is installed and enabled";
		text6 = "You Need the SideStep Plug-In to Operate this Profile";
		
					
			if(Plugin.Any()){
				
				if (Plugin != null)
				{
					PluginManager.SetEnabledPlugins("DungeonAssist");
					Core.OverlayManager.AddToast(() => text1, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
			else
				{
					Core.OverlayManager.AddToast(() => text2, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin2.Any()){
				
				if (Plugin2 != null)
				{
					PluginManager.SetEnabledPlugins("Osiris");
					Core.OverlayManager.AddToast(() => text3, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
				else
				{
					Core.OverlayManager.AddToast(() => text4, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			if(Plugin3.Any()){
				
				if (Plugin3 != null)
				{
					PluginManager.SetEnabledPlugins("SideStep");
					Core.OverlayManager.AddToast(() => text5, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
					
				}
				else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
			}
		else
				{
					Core.OverlayManager.AddToast(() => text6, TimeSpan.FromMilliseconds(5000), System.Windows.Media.Color.FromRgb(29,213,226), System.Windows.Media.Color.FromRgb(13,106,175), new System.Windows.Media.FontFamily("Gautami"));
				}
        await Coroutine.Sleep(1000);
      ]]>	
		</CodeChunk>	
	
  </CodeChunks>  
</Profile>    